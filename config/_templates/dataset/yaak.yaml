#@yaml/text-templated-strings

#@ drives = [
#@     'Niro098-HQ/2024-06-18--13-39-54',
#@ ]

#@ cameras = [
#@     'cam_front_left',
#@     'cam_left_backward',
#@     'cam_right_backward',
#@ ]
---
_target_: rbyte.Dataset
_recursive_: false
_convert_: all
inputs:
  #@ for input_id in drives:
  (@=input_id@):
    sources:
      #@ for source_id in cameras:
      (@=source_id@):
        index_column: "meta/ImageMetadata.(@=source_id@)/frame_idx"
        source:
          _target_: rbyte.io.FfmpegFrameSource
          path: "${data_dir}/(@=input_id@)/(@=source_id@).pii.mp4"
          resize_shorter_side: 324
      #@ end

    samples:
      pipeline:
        _target_: pipefunc.Pipeline
        validate_type_annotations: false
        cache_type: disk
        cache_kwargs:
          cache_dir: /tmp/rbyte-cache
        functions:
          - _target_: pipefunc.PipeFunc
            func:
              _target_: rbyte.io.YaakMetadataDataFrameBuilder
              fields:
                rbyte.io.yaak.proto.sensor_pb2.ImageMetadata:
                  time_stamp:
                    _target_: polars.Datetime
                    time_unit: ns

                  frame_idx:
                    _target_: polars.Int32

                  camera_name:
                    _target_: polars.Enum
                    categories:
                      - cam_front_center
                      - cam_front_left
                      - cam_front_right
                      - cam_left_forward
                      - cam_right_forward
                      - cam_left_backward
                      - cam_right_backward
                      - cam_rear

                rbyte.io.yaak.proto.can_pb2.VehicleMotion:
                  time_stamp:
                    _target_: polars.Datetime
                    time_unit: ns

                  speed:
                    _target_: polars.Float32

                  gear:
                    _target_: polars.Enum
                    categories: ["0", "1", "2", "3"]

            output_name: output
            scope: metadata
            cache: true

          - _target_: pipefunc.PipeFunc
            func:
              _target_: rbyte.io.McapDataFrameBuilder
              decoder_factories: [rbyte.utils._mcap.ProtobufDecoderFactory]
              fields:
                /ai/safety_score:
                  clip.end_timestamp:
                    _target_: polars.Datetime
                    time_unit: ns

                  score:
                    _target_: polars.Float32

            output_name: output
            bound:
              path: ${data_dir}/(@=input_id@)/ai.mcap
            scope: mcap

          - _target_: pipefunc.PipeFunc
            func:
              _target_: pipefunc.helpers.collect_kwargs
              parameters: [meta, mcap]
            output_name: data
            renames:
              meta: metadata.output
              mcap: mcap.output

          - _target_: pipefunc.PipeFunc
            func:
              _target_: rbyte.io.DataFrameAligner
              separator: /
              fields:
                meta:
                  ImageMetadata.(@=cameras[0]@):
                    key: time_stamp

                  #@ for camera in cameras[1:]:
                  ImageMetadata.(@=camera@):
                    key: time_stamp
                    columns:
                      frame_idx:
                        method: asof
                        tolerance: 20ms
                        strategy: nearest
                  #@ end

                  VehicleMotion:
                    key: time_stamp
                    columns:
                      speed:
                        method: interp
                      gear:
                        method: asof
                        tolerance: 100ms
                        strategy: nearest

                mcap:
                  /ai/safety_score:
                    key: clip.end_timestamp
                    columns:
                      clip.end_timestamp:
                        method: asof
                        tolerance: 500ms
                        strategy: nearest
                      score:
                        method: asof
                        tolerance: 500ms
                        strategy: nearest

            output_name: data_aligned
            renames:
              input: data

          - _target_: pipefunc.PipeFunc
            func:
              _target_: rbyte.io.DataFrameFilter
              predicate: |
                `meta/VehicleMotion/speed` > 44
            output_name: data_filtered
            renames:
              input: data_aligned

          #@ for i, camera in enumerate(cameras):
          - _target_: pipefunc.PipeFunc
            func:
              _target_: rbyte.io.VideoDataFrameBuilder
              fields:
                frame_idx:
                  _target_: polars.Int32

            output_name: data_(@=camera@)
            bound:
              path: "${data_dir}/(@=input_id@)/(@=camera@).pii.mp4"

          - _target_: pipefunc.PipeFunc
            func:
              _target_: hydra.utils.get_method
              path: polars.DataFrame.join
            #@ if i == len(cameras) - 1:
            output_name: data_joined
            #@ else:
            output_name: data_joined_(@=camera@)
            #@ end
            renames:
              #@ if i == 0:
              self: data_filtered
              #@ else:
              self: data_joined_(@=cameras[i-1]@)
              #@ end
              other: data_(@=camera@)
            bound:
              how: semi
              left_on: meta/ImageMetadata.(@=camera@)/frame_idx
              right_on: frame_idx
          #@ end

          - _target_: pipefunc.PipeFunc
            renames:
              input: data_joined
            output_name: samples
            func:
              _target_: rbyte.FixedWindowSampleBuilder
              index_column: meta/ImageMetadata.(@=cameras[0]@)/frame_idx
              every: 6i
              period: 6i
              length: 6

      kwargs:
        metadata:
          path: ${data_dir}/(@=input_id@)/metadata.log
  #@ end
