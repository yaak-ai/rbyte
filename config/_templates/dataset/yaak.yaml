#@yaml/text-templated-strings

#@ drives = [
#@     'Niro098-HQ/2024-06-18--13-39-54',
#@ ]

#@ cameras = [
#@     'cam_front_left',
#@     'cam_left_backward',
#@     'cam_right_backward',
#@ ]
---
_target_: rbyte.Dataset
_recursive_: false
_convert_: all
sources:
  #@ for input_id in drives:
  (@=input_id@):
    #@ for source_id in cameras:
    (@=source_id@):
      index_column: meta/ImageMetadata.(@=source_id@)/frame_idx
      source:
        _target_: rbyte.io.TorchCodecFrameSource
        source: ${data_dir}/(@=input_id@)/(@=source_id@).pii.mp4
        device: cpu
    #@ end
  #@ end

samples:
  inputs:
    #@ for input_id in drives:
    (@=input_id@):
      meta_path: ${data_dir}/(@=input_id@)/metadata.log
      mcap_path: ${data_dir}/(@=input_id@)/ai.mcap
      waypoints_path: ${data_dir}/(@=input_id@)/waypoints.json
      #@ for camera in cameras:
      (@=camera@)_path: ${data_dir}/(@=input_id@)/(@=camera@).pii.mp4
      #@ end
    #@ end

  executor:
    _target_: concurrent.futures.ThreadPoolExecutor

  storage: dict
  pipeline:
    _target_: pipefunc.Pipeline
    validate_type_annotations: false
    functions:
      - _target_: pipefunc.PipeFunc
        renames:
          path: meta_path
        output_name: meta
        mapspec: "meta_path[i] -> meta[i]"
        func:
          _target_: rbyte.io.YaakMetadataDataFrameBuilder
          fields:
            rbyte.io.yaak.proto.sensor_pb2.ImageMetadata:
              time_stamp:
                _target_: polars.Datetime
                time_unit: us

              frame_idx:
                _target_: polars.Int32

              camera_name:
                _target_: polars.Enum
                categories:
                  - cam_front_center
                  - cam_front_left
                  - cam_front_right
                  - cam_left_forward
                  - cam_right_forward
                  - cam_left_backward
                  - cam_right_backward
                  - cam_rear

            rbyte.io.yaak.proto.can_pb2.VehicleMotion:
              time_stamp:
                _target_: polars.Datetime
                time_unit: us

              speed:
                _target_: polars.Float32

            rbyte.io.yaak.proto.sensor_pb2.Gnss:
              time_stamp:
                _target_: polars.Datetime
                time_unit: us

              latitude:
                _target_: polars.Float32

              longitude:
                _target_: polars.Float32

      #@ for camera in cameras:
      - _target_: pipefunc.PipeFunc
        renames:
          path: (@=camera@)_path
        output_name: (@=camera@)_meta
        mapspec: "(@=camera@)_path[i] -> (@=camera@)_meta[i]"
        func:
          _target_: rbyte.io.VideoDataFrameBuilder
          fields:
            frame_idx:
              _target_: polars.Int32
      #@ end

      - _target_: pipefunc.PipeFunc
        renames:
          path: mcap_path
        output_name: mcap
        mapspec: "mcap_path[i] -> mcap[i]"
        func:
          _target_: rbyte.io.McapDataFrameBuilder
          decoder_factories: [rbyte.io.ProtobufMcapDecoderFactory]
          fields:
            /ai/safety_score:
              clip.end_timestamp:
                _target_: polars.Datetime
                time_unit: us

              score:
                _target_: polars.Float32

      - _target_: pipefunc.PipeFunc
        renames:
          path: waypoints_path
        output_name: waypoints_raw
        mapspec: "waypoints_path[i] -> waypoints_raw[i]"
        func:
          _target_: rbyte.io.DuckDbDataFrameBuilder
          udfs:
            - _target_: hydra.utils.get_object
              path: rbyte.io._duckdb.udfs.Wgs84ToUtm
        bound:
          query: |
            LOAD spatial;
            SET TimeZone = 'UTC';
            SELECT TO_TIMESTAMP(timestamp)::TIMESTAMP AS timestamp,
                   heading,
                   ST_Wgs84ToUtm(ST_AsWKB(geom)) AS geometry
            FROM ST_Read('{path}')

      - _target_: pipefunc.PipeFunc
        renames:
          input: waypoints_raw
        output_name: waypoints
        mapspec: "waypoints_raw[i] -> waypoints[i]"
        func:
          _target_: rbyte.io.WaypointBuilder
          length: 10
          columns:
            points: geometry
            output: waypoints

      - _target_: pipefunc.PipeFunc
        output_name: data
        mapspec: "meta[i], mcap[i], waypoints[i] -> data[i]"
        func:
          _target_: pipefunc.helpers.collect_kwargs
          parameters: [meta, mcap, waypoints]

      - _target_: pipefunc.PipeFunc
        renames:
          input: data
        output_name: aligned
        mapspec: "data[i] -> aligned[i]"
        func:
          _target_: rbyte.io.DataFrameAligner
          separator: /
          fields:
            meta:
              ImageMetadata.(@=cameras[0]@):
                key: time_stamp

              #@ for camera in cameras[1:]:
              ImageMetadata.(@=camera@):
                key: time_stamp
                columns:
                  frame_idx:
                    method: asof
                    tolerance: 20ms
                    strategy: nearest
              #@ end

              VehicleMotion:
                key: time_stamp
                columns:
                  speed:
                    method: interp

              Gnss:
                key: time_stamp
                columns:
                  latitude:
                    method: asof
                    tolerance: 500ms
                    strategy: nearest
                  longitude:
                    method: asof
                    tolerance: 500ms
                    strategy: nearest

            mcap:
              /ai/safety_score:
                key: clip.end_timestamp
                columns:
                  clip.end_timestamp:
                    method: asof
                    tolerance: 500ms
                    strategy: nearest
                  score:
                    method: asof
                    tolerance: 500ms
                    strategy: nearest

            waypoints:
              key: timestamp
              columns:
                heading:
                  method: asof
                  strategy: nearest

                waypoints:
                  method: asof
                  strategy: nearest

      - _target_: pipefunc.PipeFunc
        output_name: query_context
        mapspec: #@ ", ".join(["aligned[i]"] + ["{}_meta[i]".format(camera) for camera in cameras]) + " -> query_context[i]"
        func:
          _target_: pipefunc.helpers.collect_kwargs
          parameters: #@ ["aligned"] + ["{}_meta".format(camera) for camera in cameras]

      - _target_: pipefunc.PipeFunc
        renames:
          context: query_context
        output_name: filtered
        mapspec: "query_context[i] -> filtered[i]"
        func:
          _target_: rbyte.io.DataFrameDuckDbQuery
          udfs:
            - _target_: hydra.utils.get_object
              path: rbyte.io._duckdb.udfs.Wgs84ToUtm
        bound:
          query: |
            LOAD spatial;
            SELECT
              *,
              ST_Wgs84ToUtm(
                ST_AsWKB(
                  ST_Point("meta/Gnss/longitude", "meta/Gnss/latitude")
                )
              ) AS "meta/Gnss/xy"
            FROM aligned
              SEMI JOIN cam_front_left_meta
                ON aligned."meta/ImageMetadata.cam_front_left/frame_idx" = cam_front_left_meta.frame_idx
              SEMI JOIN cam_left_backward_meta
                ON aligned."meta/ImageMetadata.cam_left_backward/frame_idx" = cam_left_backward_meta.frame_idx
              SEMI JOIN cam_right_backward_meta
                ON aligned."meta/ImageMetadata.cam_right_backward/frame_idx" = cam_right_backward_meta.frame_idx

            WHERE COLUMNS(*) IS NOT NULL AND "meta/VehicleMotion/speed" > 44

      - _target_: pipefunc.PipeFunc
        renames:
          input: filtered
        output_name: with_waypoints_normalized
        mapspec: "filtered[i] -> with_waypoints_normalized[i]"
        func:
          _target_: rbyte.io.WaypointNormalizer
          columns:
            ego: meta/Gnss/xy
            waypoints: waypoints/waypoints
            heading: waypoints/heading
            output: waypoints/waypoints_normalized

      - _target_: pipefunc.PipeFunc
        renames:
          input: with_waypoints_normalized
        output_name: samples
        mapspec: "with_waypoints_normalized[i] -> samples[i]"
        func:
          _target_: rbyte.io.DataFrameGroupByDynamic
          index_column: meta/ImageMetadata.(@=cameras[0]@)/frame_idx
          every: 6i
          period: 6i

      - _target_: pipefunc.PipeFunc
        renames:
          df: samples
        output_name: samples_cast
        mapspec: "samples[i] -> samples_cast[i]"
        func:
          _target_: rbyte.io.DataFrameDuckDbQuery
        bound:
          query: |
            SELECT "meta/ImageMetadata.cam_front_left/time_stamp"::TIMESTAMP[6] AS "meta/ImageMetadata.cam_front_left/time_stamp",
                   "meta/ImageMetadata.cam_front_left/frame_idx"::INT32[6] AS "meta/ImageMetadata.cam_front_left/frame_idx",
                   "meta/ImageMetadata.cam_left_backward/frame_idx"::INT32[6] AS "meta/ImageMetadata.cam_left_backward/frame_idx",
                   "meta/ImageMetadata.cam_right_backward/frame_idx"::INT32[6] AS "meta/ImageMetadata.cam_right_backward/frame_idx",
                   "meta/VehicleMotion/speed"::FLOAT[6] AS "meta/VehicleMotion/speed",
                   "mcap//ai/safety_score/clip.end_timestamp"::TIMESTAMP[6] AS "mcap//ai/safety_score/clip.end_timestamp",
                   "mcap//ai/safety_score/score"::FLOAT[6] AS "mcap//ai/safety_score/score",
                   "waypoints/heading"::FLOAT[6] AS "waypoints/heading",
                   "waypoints/waypoints_normalized"::FLOAT[2][10][6] AS "waypoints/waypoints_normalized",
            FROM df
            WHERE len("meta/ImageMetadata.cam_front_left/frame_idx") == 6
