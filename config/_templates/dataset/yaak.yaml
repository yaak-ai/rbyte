#@yaml/text-templated-strings

#@ drives = [
#@     'Niro098-HQ/2024-06-18--13-39-54',
#@ ]

#@ cameras = [
#@     'cam_front_left',
#@     'cam_left_backward',
#@     'cam_right_backward',
#@ ]
---
_target_: rbyte.Dataset
_recursive_: false
_convert_: all
sources:
  #@ for input_id in drives:
  (@=input_id@):
    #@ for source_id in cameras:
    (@=source_id@):
      index_column: meta/ImageMetadata.(@=source_id@)/frame_idx
      source:
        _target_: rbyte.io.TorchCodecFrameSource
        path: ${data_dir}/(@=input_id@)/(@=source_id@).pii.mp4
        device: cpu
    #@ end
  #@ end

samples:
  inputs:
    #@ for input_id in drives:
    (@=input_id@):
      meta_path: ${data_dir}/(@=input_id@)/metadata.log
      mcap_path: ${data_dir}/(@=input_id@)/ai.mcap
      waypoints_path: ${data_dir}/(@=input_id@)/waypoints.json
      #@ for camera in cameras:
      (@=camera@)_path: ${data_dir}/(@=input_id@)/(@=camera@).pii.mp4
      #@ end
    #@ end

  executor:
    _target_: concurrent.futures.ThreadPoolExecutor

  storage: dict
  pipeline:
    _target_: pipefunc.Pipeline
    validate_type_annotations: false
    functions:
      - _target_: pipefunc.PipeFunc
        renames:
          path: meta_path
        output_name: meta
        mapspec: "meta_path[i] -> meta[i]"
        func:
          _target_: rbyte.io.YaakMetadataDataFrameBuilder
          fields:
            rbyte.io.yaak.proto.sensor_pb2.ImageMetadata:
              time_stamp:
                _target_: polars.Datetime
                time_unit: ns

              frame_idx:
                _target_: polars.Int32

              camera_name:
                _target_: polars.Enum
                categories:
                  - cam_front_center
                  - cam_front_left
                  - cam_front_right
                  - cam_left_forward
                  - cam_right_forward
                  - cam_left_backward
                  - cam_right_backward
                  - cam_rear

            rbyte.io.yaak.proto.can_pb2.VehicleMotion:
              time_stamp:
                _target_: polars.Datetime
                time_unit: ns

              speed:
                _target_: polars.Float32

              gear:
                _target_: polars.Enum
                categories: ["0", "1", "2", "3"]

            rbyte.io.yaak.proto.sensor_pb2.Gnss:
              time_stamp:
                _target_: polars.Datetime
                time_unit: ns

              latitude:
                _target_: polars.Float32

              longitude:
                _target_: polars.Float32

      - _target_: pipefunc.PipeFunc
        renames:
          path: mcap_path
        output_name: mcap
        mapspec: "mcap_path[i] -> mcap[i]"
        func:
          _target_: rbyte.io.McapDataFrameBuilder
          decoder_factories: [rbyte.utils._mcap.ProtobufDecoderFactory]
          fields:
            /ai/safety_score:
              clip.end_timestamp:
                _target_: polars.Datetime
                time_unit: ns

              score:
                _target_: polars.Float32

      - _target_: pipefunc.PipeFunc
        renames:
          path: waypoints_path
        output_name: features
        output_picker:
          _target_: hydra.utils.get_method
          path: builtins.dict.get
        mapspec: "waypoints_path[i] -> features[i]"
        func:
          _target_: rbyte.io.JsonDataFrameBuilder
          fields:
            features:
              properties.timestamp:
              properties.heading:
              geometry.coordinates:
                _target_: polars.Array
                inner:
                  _target_: polars.Float32
                shape: 2

      - _target_: pipefunc.PipeFunc
        renames:
          input: features
        output_name: waypoints
        mapspec: "features[i] -> waypoints[i]"
        func:
          _target_: rbyte.io.YaakWaypointPreprocessor
          num_waypoints: 10
          columns:
            timestamp: properties.timestamp
            heading: properties.heading
            coordinates: geometry.coordinates
            output: waypoints

      - _target_: pipefunc.PipeFunc
        output_name: data
        mapspec: "meta[i], mcap[i], waypoints[i] -> data[i]"
        func:
          _target_: pipefunc.helpers.collect_kwargs
          parameters: [meta, mcap, waypoints]
          function_name: aggregate

      - _target_: pipefunc.PipeFunc
        renames:
          input: data
        output_name: aligned
        mapspec: "data[i] -> aligned[i]"
        func:
          _target_: rbyte.io.DataFrameAligner
          separator: /
          fields:
            meta:
              ImageMetadata.(@=cameras[0]@):
                key: time_stamp

              #@ for camera in cameras[1:]:
              ImageMetadata.(@=camera@):
                key: time_stamp
                columns:
                  frame_idx:
                    method: asof
                    tolerance: 20ms
                    strategy: nearest
              #@ end

              VehicleMotion:
                key: time_stamp
                columns:
                  speed:
                    method: interp
                  gear:
                    method: asof
                    tolerance: 100ms
                    strategy: nearest

              Gnss:
                key: time_stamp
                columns:
                  latitude:
                    method: asof
                    tolerance: 500ms
                    strategy: nearest
                  longitude:
                    method: asof
                    tolerance: 500ms
                    strategy: nearest

            mcap:
              /ai/safety_score:
                key: clip.end_timestamp
                columns:
                  clip.end_timestamp:
                    method: asof
                    tolerance: 500ms
                    strategy: nearest
                  score:
                    tolerance: 500ms
                    strategy: nearest

            waypoints:
              key: properties.timestamp
              columns:
                properties.heading:
                  method: asof
                  strategy: nearest

                waypoints:
                  method: asof
                  strategy: nearest

      - _target_: pipefunc.PipeFunc
        renames:
          input: aligned
        output_name: filtered
        mapspec: "aligned[i] -> filtered[i]"
        func:
          _target_: rbyte.io.DataFrameFilter
          predicate: |
            `meta/VehicleMotion/speed` > 44

      #@ for i, camera in enumerate(cameras):
      - _target_: pipefunc.PipeFunc
        renames:
          path: (@=camera@)_path
        output_name: (@=camera@)_meta
        mapspec: "(@=camera@)_path[i] -> (@=camera@)_meta[i]"
        func:
          _target_: rbyte.io.VideoDataFrameBuilder
          fields:
            frame_idx:
              _target_: polars.Int32

      - _target_: pipefunc.PipeFunc
        #@ left = "filtered" if i == 0 else "joined_{}".format('_'.join(cameras[:i]))
        #@ right = "{}_meta".format(camera)
        #@ joined = "joined_{}".format('_'.join(cameras[:i+1]))
        renames:
          left: #@ left
          right: #@ right
        output_name: #@ joined
        mapspec: "(@=left@)[i], (@=right@)[i] -> (@=joined@)[i]"
        func:
          _target_: rbyte.io.DataFrameJoiner
          how: semi
          left_on: meta/ImageMetadata.(@=camera@)/frame_idx
          right_on: frame_idx
      #@ end

      - _target_: pipefunc.PipeFunc
        renames:
          input: (@=joined@)
        output_name: with_waypoints_normalized
        mapspec: "(@=joined@)[i] -> with_waypoints_normalized[i]"
        func:
          _target_: rbyte.io.YaakWaypointNormalizer
          columns:
            ego_coordinates: [meta/Gnss/longitude, meta/Gnss/latitude]
            waypoint_coordinates: waypoints/waypoints
            heading: waypoints/properties.heading
            output: waypoints/waypoints_normalized

      - _target_: pipefunc.PipeFunc
        renames:
          input: with_waypoints_normalized
        output_name: samples
        mapspec: "with_waypoints_normalized[i] -> samples[i]"
        func:
          _target_: rbyte.io.FixedWindowSampleBuilder
          index_column: meta/ImageMetadata.(@=cameras[0]@)/frame_idx
          every: 6i
          period: 6i
          length: 6
