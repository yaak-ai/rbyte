---
_target_: rbyte.Dataset
_recursive_: false
_convert_: all
sources:
  000002_short:
    camera_front_blur:
      index_column: camera_front_blur_meta/timestamp
      source:
        _target_: rbyte.io.PathTensorSource
        path: "${data_dir}/sequences/000002_short/camera_front_blur/000002_romeo_{:%Y-%m-%dT%H:%M:%S.%f}Z.jpg"
        decoder:
          _target_: simplejpeg.decode_jpeg
          _partial_: true
          colorspace: rgb
          fastdct: true
          fastupsample: true

    lidar_velodyne:
      index_column: lidar_velodyne_meta/timestamp
      source:
        _target_: rbyte.io.NumpyTensorSource
        path: "${data_dir}/sequences/000002_short/lidar_velodyne/000002_romeo_{:%Y-%m-%dT%H:%M:%S.%f}Z.npy"
        select: ["x", "y", "z"]

samples:
  inputs:
    000002_short:
      camera_front_blur_path: ${data_dir}/sequences/000002_short/camera_front_blur
      lidar_velodyne_path: ${data_dir}/sequences/000002_short/lidar_velodyne
      vehicle_data_path: ${data_dir}/sequences/000002_short/vehicle_data.hdf5

  executor:
    _target_: concurrent.futures.ThreadPoolExecutor

  pipeline:
    _target_: pipefunc.Pipeline
    validate_type_annotations: false
    functions:
      - _target_: pipefunc.PipeFunc
        renames:
          path: camera_front_blur_path
        output_name: camera_front_blur_meta
        mapspec: "camera_front_blur_path[i] -> camera_front_blur_meta[i]"
        func:
          _target_: rbyte.io.PathDataFrameBuilder
          pattern: 000002_romeo_(?<timestamp>.+)Z
          fields:
            timestamp:
              _target_: polars.Datetime
              time_unit: ns

      - _target_: pipefunc.PipeFunc
        renames:
          path: lidar_velodyne_path
        output_name: lidar_velodyne_meta
        mapspec: "lidar_velodyne_path[i] -> lidar_velodyne_meta[i]"
        func:
          _target_: rbyte.io.PathDataFrameBuilder
          pattern: '000002_romeo_(?<timestamp>.+)Z'
          fields:
            timestamp:
              _target_: polars.Datetime
              time_unit: ns

      - _target_: pipefunc.PipeFunc
        renames:
          path: vehicle_data_path
        output_name: vehicle_data
        mapspec: "vehicle_data_path[i] -> vehicle_data[i]"
        func:
          _target_: rbyte.io.Hdf5DataFrameBuilder
          fields:
            ego_vehicle_controls:
              timestamp/nanoseconds/value:
                _target_: polars.Datetime
                time_unit: ns

              acceleration_pedal/ratio/unitless/value:
              steering_wheel_angle/angle/radians/value:

            satellite:
              timestamp/nanoseconds/value:
                _target_: polars.Datetime
                time_unit: ns

              speed/meters_per_second/value:

      - _target_: pipefunc.PipeFunc
        output_name: data
        mapspec: "camera_front_blur_meta[i], lidar_velodyne_meta[i], vehicle_data[i] -> data[i]"
        func:
          _target_: pipefunc.helpers.collect_kwargs
          parameters:
            [camera_front_blur_meta, lidar_velodyne_meta, vehicle_data]

      - _target_: pipefunc.PipeFunc
        renames:
          input: data
        output_name: aligned
        mapspec: "data[i] -> aligned[i]"
        func:
          _target_: rbyte.io.DataFrameAligner
          separator: /
          fields:
            camera_front_blur_meta:
              key: timestamp

            lidar_velodyne_meta:
              key: timestamp
              columns:
                timestamp:
                  method: asof
                  strategy: nearest
                  tolerance: 100ms

            vehicle_data:
              ego_vehicle_controls:
                key: timestamp/nanoseconds/value
                columns:
                  timestamp/nanoseconds/value:
                    method: asof
                    strategy: nearest
                    tolerance: 100ms

                  acceleration_pedal/ratio/unitless/value:
                    method: asof
                    strategy: nearest
                    tolerance: 100ms

                  steering_wheel_angle/angle/radians/value:
                    method: asof
                    strategy: nearest
                    tolerance: 100ms

              satellite:
                key: timestamp/nanoseconds/value
                columns:
                  speed/meters_per_second/value:
                    method: interp

      - _target_: pipefunc.PipeFunc
        renames:
          input: aligned
        output_name: samples
        mapspec: "aligned[i] -> samples[i]"
        func:
          _target_: rbyte.io.FixedWindowSampleBuilder
          index_column: camera_front_blur_meta/timestamp
          every: 300ms
