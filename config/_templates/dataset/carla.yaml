#@yaml/text-templated-strings

#@ drives = [
#@     'Accident',
#@     'Accident_2',
#@     'AccidentTwoWays',
#@     'BlockedIntersection',
#@     'ConstructionObstacle',
#@     'ConstructionObstacleTwoWays',
#@     'ControlLoss',
#@     'DynamicObjectCrossing_right_container',
#@     'DynamicObjectCrossing_right_haybalelb',
#@     'EnterActorFlow_fast',
#@     'EnterActorFlow_slow',
#@     'HardBreakRoute',
#@     'HazardAtSideLane',
#@     'HazardAtSideLaneTwoWays',
#@     'HighwayCutIn',
#@     'HighwayExit',
#@     'InterurbanActorFlow_fast',
#@     'InterurbanActorFlow_slow',
#@     'InterurbanAdvancedActorFlow_fast',
#@     'InterurbanAdvancedActorFlow_slow',
#@     'InterurbanAdvancedActorFlow_slow_2',
#@     'InvadingTurn_less_curve',
#@     'InvadingTurn_much_curve',
#@     'MergerIntoSlowTraffic',
#@     'MergerIntoSlowTrafficV2',
#@     'NonSignalizedJunctionLeftTurn_fast',
#@     'NonSignalizedJunctionLeftTurn_slow',
#@     'NonSignalizedJunctionRightTurn_fast',
#@     'NonSignalizedJunctionRightTurn_slow',
#@     'OppositeVehicleRunningRedLight',
#@     'OppositeVehicleTakingPriority',
#@     'ParkedObstacle',
#@     'ParkedObstacleTwoWays',
#@     'ParkingCrossingPedestrian',
#@     'ParkingCutIn',
#@     'ParkingExit',
#@     'PedestrianCrossing',
#@     'SignalizedJunctionLeftTurn_fast',
#@     'SignalizedJunctionLeftTurn_slow',
#@     'SignalizedJunctionRightTurn_fast',
#@     'SignalizedJunctionRightTurn_slow',
#@     'StaticCutIn',
#@     'VehicleOpensDoorTwoWays',
#@     'VehicleTurningRoutePedestrian',
#@     'VehicleTurningRoute_right',
#@     'YieldToEmergencyVehicle',
#@ ]

#@ cameras = [
#@     'cam_front_left',
#@ ]
---
_target_: rbyte.Dataset
_recursive_: false
_convert_: all
sources:
  #@ for input_id in drives:
  (@=input_id@):
    #@ for source_id in cameras:
    (@=source_id@):
      index_column: _idx_
      source:
        _target_: rbyte.io.PathTensorSource
        path: "${data_dir}/(@=input_id@)/frames/(@=source_id@).defish.mp4/576x324/{:09d}.jpg"
        decoder:
          _target_: simplejpeg.decode_jpeg
          _partial_: true
          colorspace: rgb
          fastdct: true
          fastupsample: true

    #@ end
  #@ end

samples:
  inputs:
    #@ for input_id in drives:
    (@=input_id@):
      ego_logs_path: ${data_dir}/(@=input_id@)/ego_logs.json
    #@ end

  pipeline:
    _target_: pipefunc.Pipeline
    validate_type_annotations: false
    functions:
      - _target_: pipefunc.PipeFunc
        renames:
          path: ego_logs_path
        output_name: ego_logs
        mapspec: "ego_logs_path[i] -> ego_logs[i]"
        func:
          _target_: rbyte.io.JsonDataFrameBuilder
          fields:
            records:
              control.brake:
              control.throttle:
              control.steer:
              state.velocity.value:
              state.acceleration.value:

      - _target_: pipefunc.PipeFunc
        renames:
          input: ego_logs
        output_name: data
        mapspec: "ego_logs[i] -> data[i]"
        func:
          _target_: rbyte.io.DataFrameConcater
          method: vertical

      - _target_: pipefunc.PipeFunc
        renames:
          input: data
        output_name: resampled
        mapspec: "data[i] -> resampled[i]"
        func:
          _target_: rbyte.io.DataFrameFpsResampler
          fps_in: 20
          fps_out: 30

      - _target_: pipefunc.PipeFunc
        renames:
          input: resampled
        output_name: indexed
        mapspec: "resampled[i] -> indexed[i]"
        func:
          _target_: rbyte.io.DataFrameIndexer
          name: _idx_

      - _target_: pipefunc.PipeFunc
        renames:
          self: indexed
        output_name: samples
        mapspec: "indexed[i] -> samples[i]"
        func:
          _target_: hydra.utils.get_method
          path: polars.DataFrame.sql
        bound:
          query: |
            SELECT * FROM self WHERE `control.throttle` > 0.5
