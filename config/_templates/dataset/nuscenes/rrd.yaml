#@yaml/text-templated-strings

#@ inputs = [
#@     "nuscenes_dataset",
#@ ]

#@ camera_entities = {
#@     "CAM_FRONT": "/world/ego_vehicle/CAM_FRONT",
#@     "CAM_FRONT_LEFT": "/world/ego_vehicle/CAM_FRONT_LEFT",
#@     "CAM_FRONT_RIGHT": "/world/ego_vehicle/CAM_FRONT_RIGHT",
#@ }
---
_target_: rbyte.Dataset
_recursive_: false
_convert_: all
sources:
  #@ for input_id in inputs:
  (@=input_id@):
    #@ for camera, entity in camera_entities.items():
    (@=camera@):
      index_column: (@=entity@)/_idx_
      source:
        _target_: rbyte.io.RrdFrameSource
        path: "${data_dir}/(@=input_id@).rrd"
        index: timestamp
        entity_path: (@=entity@)
        decoder:
          _target_: simplejpeg.decode_jpeg
          _partial_: true
          colorspace: rgb
          fastdct: true
          fastupsample: true
    #@ end
  #@ end

samples:
  inputs:
    #@ for input_id in inputs:
    (@=input_id@):
      path: "${data_dir}/(@=input_id@).rrd"
    #@ end

  executor:
    _target_: concurrent.futures.ThreadPoolExecutor

  storage: dict
  pipeline:
    _target_: pipefunc.Pipeline
    validate_type_annotations: false
    functions:
      - _target_: pipefunc.PipeFunc
        output_name: data
        mapspec: "path[i] -> data[i]"
        func:
          _target_: rbyte.io.RrdDataFrameBuilder
          index: timestamp
          contents:
            #@ for entity in camera_entities.values():
            (@=entity@):
            #@ end

            /world/ego_vehicle/LIDAR_TOP:
              - Position3D

      - _target_: pipefunc.PipeFunc
        renames:
          input: data
        output_name: indexed
        mapspec: "data[i] -> indexed[i]"
        func:
          _target_: rbyte.io.DataFrameIndexer
          name: _idx_

      - _target_: pipefunc.PipeFunc
        renames:
          input: indexed
        output_name: aligned
        mapspec: "indexed[i] -> aligned[i]"
        func:
          _target_: rbyte.io.DataFrameAligner
          separator: /
          fields:
            #@ entity = camera_entities.values()[0]
            (@=entity@):
              key: timestamp

            #@ for entity in camera_entities.values()[1:]:
            (@=entity@):
              key: timestamp
              columns:
                _idx_:
                  method: asof
                  strategy: nearest
                  tolerance: 60ms
            #@ end

            /world/ego_vehicle/LIDAR_TOP:
              key: timestamp
              columns:
                Position3D:
                  method: asof
                  strategy: nearest
                  tolerance: 60ms

      - _target_: pipefunc.PipeFunc
        renames:
          input: aligned
        output_name: samples
        mapspec: "aligned[i] -> samples[i]"
        func:
          _target_: rbyte.io.DataFrameFilter
          predicate: |
            `/world/ego_vehicle/CAM_FRONT/timestamp` between '2018-07-24 03:28:48' and '2018-07-24 03:28:50'
