#@yaml/text-templated-strings

#@ inputs = [
#@     "nuScenes-v1.0-mini-scene-0061-cut",
#@ ]

#@ camera_topics = {
#@     "CAM_FRONT": "/CAM_FRONT/image_rect_compressed",
#@     "CAM_FRONT_LEFT": "/CAM_FRONT_LEFT/image_rect_compressed",
#@     "CAM_FRONT_RIGHT": "/CAM_FRONT_RIGHT/image_rect_compressed",
#@ }
---
_target_: rbyte.Dataset
_recursive_: false
_convert_: all
sources:
  #@ for input_id in inputs:
  (@=input_id@):
    #@ for camera, topic in camera_topics.items():
    (@=camera@):
      index_column: (@=topic@)/_idx_
      source:
        _target_: rbyte.io.McapTensorSource
        path: "${data_dir}/(@=input_id@).mcap"
        topic: (@=topic@)
        decoder_factory: mcap_protobuf.decoder.DecoderFactory
        decoder:
          _target_: simplejpeg.decode_jpeg
          _partial_: true
          colorspace: rgb
          fastdct: true
          fastupsample: true
    #@ end
  #@ end

samples:
  inputs:
    #@ for input_id in inputs:
    (@=input_id@):
      path: "${data_dir}/(@=input_id@).mcap"
    #@ end

  executor:
    _target_: concurrent.futures.ThreadPoolExecutor
  
  pipeline:
    _target_: pipefunc.Pipeline
    validate_type_annotations: false
    functions:
      - _target_: pipefunc.PipeFunc
        output_name: data
        mapspec: "path[i] -> data[i]"
        func:
          _target_: rbyte.io.McapDataFrameBuilder
          decoder_factories:
            - rbyte.utils._mcap.ProtobufDecoderFactory
            - rbyte.utils._mcap.JsonDecoderFactory
          fields:
            #@ for topic in camera_topics.values():
            (@=topic@):
              log_time:
                _target_: polars.Datetime
                time_unit: ns
            #@ end

            /odom:
              log_time:
                _target_: polars.Datetime
                time_unit: ns
              vel.x:

      - _target_: pipefunc.PipeFunc
        renames:
          input: data
        output_name: indexed
        mapspec: "data[i] -> indexed[i]"
        func:
          _target_: rbyte.io.DataFrameIndexer
          name: _idx_

      - _target_: pipefunc.PipeFunc
        renames:
          input: indexed
        output_name: aligned
        mapspec: "indexed[i] -> aligned[i]"
        func:
          _target_: rbyte.io.DataFrameAligner
          separator: /
          fields:
            #@ topic = camera_topics.values()[0]
            (@=topic@):
              key: log_time

            #@ for topic in camera_topics.values()[1:]:
            (@=topic@):
              key: log_time
              columns:
                _idx_:
                  method: asof
                  tolerance: 40ms
                  strategy: nearest
            #@ end

            /odom:
              key: log_time
              columns:
                vel.x:
                  method: interp

      - _target_: pipefunc.PipeFunc
        renames:
          input: aligned
        output_name: samples
        mapspec: "aligned[i] -> samples[i]"
        func:
          _target_: rbyte.io.DataFrameFilter
          predicate: |
            `/odom/vel.x` >= 8
